import { useState, useEffect } from 'react';



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*UTILS------------------------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



//-- no apply



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*CUSTOM HOOK & EXPORTABLES----------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



function useProgressiveRendering(items, delay = 50) {
    const [renderedItems, setRenderedItems] = useState(0);

    useEffect(() => {
        if (renderedItems < items.length) {
            const timer = setTimeout(() => {
                setRenderedItems(renderedItems + 1);
            }, delay);
            return () => clearTimeout(timer); // Cleanup on unmount or rerender
        }
    }, [renderedItems, items.length, delay]);

    return items.slice(0, renderedItems);
}



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*EXPORTS----------------------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



export default useProgressiveRendering;