import React, { createContext, useContext, useCallback} from 'react';
import { useLocation } from 'react-router-dom';
import __ManagerThemes from './__ManagerThemes';



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*CONTEXT - NEW ---------------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



const ContextManager = createContext();



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*CONTEXT - PROVIDER-----------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



// Proveedor del contexto
const ContextManagerProvider = ({ children }) => {
    


    /*===========================================================================================*/
    /*CONSTANTS----------------------------------------------------------------------------------*/



    const appRoutes = {
        NOTFOUND: '*',
        FEED: '/',
    }



    /*===========================================================================================*/
    /*HOOKS--------------------------------------------------------------------------------------*/

    

    const location = useLocation().pathname;
    


    /*===========================================================================================*/
    /*FUNCTIONS (useState)-----------------------------------------------------------------------*/



    


    /*===========================================================================================*/
    /*TREE VALUE RETURN -------------------------------------------------------------------------*/






    /*===========================================================================================*/
    /*useEffects---------------------------------------------------------------------------------*/

    





    /*===========================================================================================*/
    /*RETURN-------------------------------------------------------------------------------------*/



    return (
        <ContextManager.Provider value={{
            themes: __ManagerThemes(),
        }}>
            {children}
        </ContextManager.Provider>
    );
};



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*CONTEXT - PROVIDER-----------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



// Custom hook para usar el contexto
const useContextManager = () => {return useContext(ContextManager); };



/*///////////////////////////////////////////////////////////////////////////////////////////////*/
/*EXPORTS----------------------------------------------------------------------------------------*/
/*///////////////////////////////////////////////////////////////////////////////////////////////*/



export { useContextManager, ContextManagerProvider }